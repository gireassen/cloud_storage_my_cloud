version: "3.9"

networks:
  appnet:
    driver: bridge

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: mycloud
      POSTGRES_USER: mycloud
      POSTGRES_PASSWORD: password
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [appnet]

  backend:
    build: ./mycloud/backend
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - backend_storage:/code/storage
      - backend_logs:/code/logs
    ports:
      - "8000:8000"
    networks:
      appnet:
        aliases:
          - backend

  frontend:
    build: ./mycloud/frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      appnet:
        aliases:
          - frontend

volumes:
  backend_storage:
  backend_logs:


# mkdir -p ./pgdata
# chmod 700 ./pgdata
# podman-compose up -d --build
# podman-compose down -v

# podman-compose logs -f
# podman-compose exec backend bash  